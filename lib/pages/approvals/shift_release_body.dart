import '../../theme/theme.dart';class ShiftReleaseBodyWithTab extends StatefulWidget {  final int? tabIndex;  ShiftReleaseBodyWithTab({Key? key, this.tabIndex}) : super(key: key) {    tabIndex ?? 0;  }  @override  State<ShiftReleaseBodyWithTab> createState() =>      _ShiftReleaseBodyWithTabState();}class _ShiftReleaseBodyWithTabState extends State<ShiftReleaseBodyWithTab>    with SingleTickerProviderStateMixin {  late final TabController _tabController;  final List<Tab> tabs = const [    Tab(text: 'Pending'),    Tab(text: 'Complete'),  ];  @override  void initState() {    super.initState();    _tabController = TabController(length: tabs.length, vsync: this);    if (widget.tabIndex != null) {      _tabController.animateTo(widget.tabIndex!);    }    _tabController.addListener(() {      setState(() {});    });  }  @override  Widget build(BuildContext context) {    return Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: [        SizedBox(          width: double.infinity,          child: TabBar(            overlayColor: MaterialStateProperty.all(Colors.transparent),            controller: _tabController,            splashFactory: NoSplash.splashFactory,            isScrollable: true,            indicatorWeight: 3.0,            indicatorColor: ThemeColors.MAIN_COLOR,            labelColor: ThemeColors.MAIN_COLOR,            unselectedLabelColor: ThemeColors.black,            labelStyle:                ThemeText.tabTextStyle.copyWith(color: ThemeColors.MAIN_COLOR),            unselectedLabelStyle: ThemeText.tabTextStyle,            tabs: tabs,          ),        ),        const Divider(height: 0, color: ThemeColors.gray11),        _getTabChild(),      ],    );  }  Widget _getTabChild() {    switch (_tabController.index) {      case 0:        return pending();      case 1:        return complete();      default:        return const SizedBox();    }  }  Widget pending() {    double dpWidth = 150;    double inputWidth = 344;    return SpacedColumn(children: [      SizedBox(          height: 750,          width: double.infinity,          child: SingleChildScrollView(              child: SpacedColumn(                  crossAxisAlignment: CrossAxisAlignment.center,                  mainAxisAlignment: MainAxisAlignment.center,                  verticalSpace: 8.0,                  children: [                Padding(                    padding: const EdgeInsets.symmetric(                        horizontal: 16.0, vertical: 8.0),                    child: SpacedRow(                        crossAxisAlignment: CrossAxisAlignment.center,                        mainAxisAlignment: MainAxisAlignment.spaceBetween,                        children: [                          TextInputWidget(                            width: inputWidth,                            heigth: 48,                            leftIcon: HeroIcons.search,                            hintText: 'Search ...',                            controller: TextEditingController(),                          ),                          SizedBox(                            height: 48,                            child: DropdownWidget(                                hintText: "Action",                                isRequired: true,                                dropdownBtnWidth: dpWidth,                                dropdownOptionsWidth: dpWidth,                                onChanged: (val) {},                                items: const [                                  "Basic",                                  "Premium",                                  "Enterprise"                                ]),                          )                        ])),                const Divider(height: 0, color: ThemeColors.gray11),              ]))),      const Divider(height: 0, color: ThemeColors.gray11),    ]);  }  Widget complete() {    double dpWidth = 150;    double inputWidth = 344;    return SpacedColumn(children: [      SizedBox(          height: 750,          width: double.infinity,          child: SingleChildScrollView(              child: SpacedColumn(                  crossAxisAlignment: CrossAxisAlignment.center,                  mainAxisAlignment: MainAxisAlignment.center,                  verticalSpace: 8.0,                  children: [                Padding(                    padding: const EdgeInsets.symmetric(                        horizontal: 16.0, vertical: 8.0),                    child: SpacedRow(                        crossAxisAlignment: CrossAxisAlignment.center,                        mainAxisAlignment: MainAxisAlignment.spaceBetween,                        children: [                          TextInputWidget(                            width: inputWidth,                            heigth: 48,                            leftIcon: HeroIcons.search,                            hintText: 'Search ...',                            controller: TextEditingController(),                          ),                          SizedBox(                            height: 48,                            child: DropdownWidget(                                hintText: "Action",                                isRequired: true,                                dropdownBtnWidth: dpWidth,                                dropdownOptionsWidth: dpWidth,                                onChanged: (val) {},                                items: const [                                  "Basic",                                  "Premium",                                  "Enterprise"                                ]),                          )                        ])),                const Divider(height: 0, color: ThemeColors.gray11),              ]))),      const Divider(height: 0, color: ThemeColors.gray11),    ]);  }}